<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <!-- Baseline Jenkins version you use to build and test the plugin. Users must have this version or newer to run. -->
        <version>1.609.1</version>
        <relativePath />
    </parent>
    <artifactId>mktmpio</artifactId>
    <version>0.3.3-SNAPSHOT</version>
    <packaging>hpi</packaging>
    <inceptionYear>2015</inceptionYear>

    <name>Jenkins mktmpio Plugin</name>
    <description>Create a disposable database server for the duration of a build.</description>
    <url>https://wiki.jenkins-ci.org/display/JENKINS/mktmpio+Plugin</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <properties>
        <workflow.version>1.8</workflow.version>
        <surefire.timeout>500</surefire.timeout>
        <forkCount>0</forkCount>
        <!--<parallel>suites</parallel>-->
        <!--<threadCount>8</threadCount>-->
    </properties>

    <developers>
        <developer>
            <id>rmgraham</id>
            <name>Ryan Graham</name>
            <email>r.m.graham@gmail.com</email>
        </developer>
    </developers>
    <organization>
        <name>mktmpio team, Datajin Technologies, Inc.</name>
        <url>https://mktmp.io/</url>
    </organization>
    <scm>
      <connection>scm:git:git://github.com/jenkinsci/${project.artifactId}-plugin.git</connection>
      <developerConnection>scm:git:git@github.com:jenkinsci/${project.artifactId}-plugin.git</developerConnection>
      <url>https://github.com/jenkinsci/${project.artifactId}-plugin</url>
      <tag>HEAD</tag>
  </scm>
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>
    <!-- If you want to depend on other plugins:
    <dependencies>
      <dependency>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>credentials</artifactId>
        <version>1.9.4</version>
      </dependency>
    </dependencies>
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.jenkins-ci.tools</groupId>
                <artifactId>maven-hpi-plugin</artifactId>
                <version>1.114</version>
                <configuration>
                    <injectedTestName>InjectIT</injectedTestName>
                    <dependencyResolution>runtime</dependencyResolution>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.6</version>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>1.57</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.shazam</groupId>
            <artifactId>shazamcrest</artifactId>
            <version>0.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-job</artifactId>
            <version>${workflow.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-basic-steps</artifactId>
            <version>${workflow.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps</artifactId>
            <version>${workflow.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-durable-task-step</artifactId>
            <version>${workflow.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- using org.jenkinsci.plugins.workflow.steps.StepConfigTester in tests -->
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-step-api</artifactId>
            <version>${workflow.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- using org.jenkinsci.plugins.workflow.JenkinsRuleExt in tests -->
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-aggregator</artifactId>
            <version>${workflow.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- prevent ClassNotFounds during test -->
            <groupId>org.jenkins-ci.modules</groupId>
            <artifactId>sshd</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- using org.jenkinsci.plugins.workflow.test.steps.SemaphoreStep in tests -->
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-support</artifactId>
            <version>${workflow.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
